## Expressions								## Expressions
**IdentifierReference[Yield, Await] :**					**IdentifierReference[Yield, Await] :**
									
&ensp;&ensp;Identifier							&ensp;&ensp;Identifier
									
&ensp;&ensp;[~Yield] yield						&ensp;&ensp;[~Yield] yield
									
&ensp;&ensp;[~Await] await						&ensp;&ensp;[~Await] await
<br><br>								<br><br>
**BindingIdentifier[Yield, Await] :**					**BindingIdentifier[Yield, Await] :**
									
&ensp;&ensp;Identifier							&ensp;&ensp;Identifier
									
&ensp;&ensp;yield							&ensp;&ensp;yield
									
&ensp;&ensp;await							&ensp;&ensp;await
<br><br>								<br><br>
**LabelIdentifier[Yield, Await] :**					**LabelIdentifier[Yield, Await] :**
									
&ensp;&ensp;Identifier							&ensp;&ensp;Identifier
									
&ensp;&ensp;[~Yield] yield						&ensp;&ensp;[~Yield] yield
									
&ensp;&ensp;[~Await] await						&ensp;&ensp;[~Await] await
<br><br>								<br><br>
**Identifier :**							**Identifier :**
									
&ensp;&ensp;IdentifierName but not ReservedWord				&ensp;&ensp;IdentifierName but not ReservedWord
<br><br>								<br><br>
**PrimaryExpression[Yield, Await] :**					**PrimaryExpression[Yield, Await] :**
									
&ensp;&ensp;this							&ensp;&ensp;this
									
&ensp;&ensp;IdentifierReference[?Yield, ?Await]				&ensp;&ensp;IdentifierReference[?Yield, ?Await]
									
&ensp;&ensp;Literal							&ensp;&ensp;Literal
									
&ensp;&ensp;ArrayLiteral[?Yield, ?Await]				&ensp;&ensp;ArrayLiteral[?Yield, ?Await]
									
&ensp;&ensp;ObjectLiteral[?Yield, ?Await]				&ensp;&ensp;ObjectLiteral[?Yield, ?Await]
									
&ensp;&ensp;FunctionExpression						&ensp;&ensp;FunctionExpression
									
&ensp;&ensp;ClassExpression[?Yield, ?Await]				&ensp;&ensp;ClassExpression[?Yield, ?Await]
									
&ensp;&ensp;GeneratorExpression						&ensp;&ensp;GeneratorExpression
									
&ensp;&ensp;AsyncFunctionExpression					&ensp;&ensp;AsyncFunctionExpression
									
&ensp;&ensp;AsyncGeneratorExpression					&ensp;&ensp;AsyncGeneratorExpression
									
&ensp;&ensp;RegularExpressionLiteral					&ensp;&ensp;RegularExpressionLiteral
									
&ensp;&ensp;TemplateLiteral[?Yield, ?Await, ~Tagged]			&ensp;&ensp;TemplateLiteral[?Yield, ?Await, ~Tagged]
									
&ensp;&ensp;CoverParenthesizedExpressionAndArrowParameter		&ensp;&ensp;CoverParenthesizedExpressionAndArrowParameter
<br><br>								<br><br>
**CoverParenthesizedExpressionAndArrowParameterList[Yield		**CoverParenthesizedExpressionAndArrowParameterList[Yield
									
&ensp;&ensp;( Expression[+In, ?Yield, ?Await] )				&ensp;&ensp;( Expression[+In, ?Yield, ?Await] )
									
&ensp;&ensp;( Expression[+In, ?Yield, ?Await] , )			&ensp;&ensp;( Expression[+In, ?Yield, ?Await] , )
									
&ensp;&ensp;( )								&ensp;&ensp;( )
									
&ensp;&ensp;( ... BindingIdentifier[?Yield, ?Await] )			&ensp;&ensp;( ... BindingIdentifier[?Yield, ?Await] )
									
&ensp;&ensp;( ... BindingPattern[?Yield, ?Await] )			&ensp;&ensp;( ... BindingPattern[?Yield, ?Await] )
									
&ensp;&ensp;( Expression[+In, ?Yield, ?Await] , ... Bindi		&ensp;&ensp;( Expression[+In, ?Yield, ?Await] , ... Bindi
									
&ensp;&ensp;( Expression[+In, ?Yield, ?Await] , ... Bindi		&ensp;&ensp;( Expression[+In, ?Yield, ?Await] , ... Bindi
									
&ensp;&ensp;When processing an instance of the production		&ensp;&ensp;When processing an instance of the production
									
&ensp;&ensp;PrimaryExpression[Yield, Await] : CoverParent		&ensp;&ensp;PrimaryExpression[Yield, Await] : CoverParent
<br><br>								<br><br>
**the interpretation of CoverParenthesizedExpressionAndAr		**the interpretation of CoverParenthesizedExpressionAndAr
									
&ensp;&ensp;								&ensp;&ensp;
<br><br>								<br><br>
**ParenthesizedExpression[Yield, Await] :**				**ParenthesizedExpression[Yield, Await] :**
									
&ensp;&ensp;( Expression[+In, ?Yield, ?Await] )				&ensp;&ensp;( Expression[+In, ?Yield, ?Await] )
									
&ensp;&ensp;								&ensp;&ensp;
									
&ensp;&ensp;								&ensp;&ensp;
<br><br>								<br><br>
**Literal :**								**Literal :**
									
&ensp;&ensp;NullLiteral							&ensp;&ensp;NullLiteral
									
&ensp;&ensp;BooleanLiteral						&ensp;&ensp;BooleanLiteral
									
&ensp;&ensp;NumericLiteral						&ensp;&ensp;NumericLiteral
									
&ensp;&ensp;StringLiteral						&ensp;&ensp;StringLiteral
<br><br>								<br><br>
**ArrayLiteral[Yield, Await] :**					**ArrayLiteral[Yield, Await] :**
									
&ensp;&ensp;[ Elisionopt ]						&ensp;&ensp;[ Elisionopt ]
									
&ensp;&ensp;[ ElementList[?Yield, ?Await] ]				&ensp;&ensp;[ ElementList[?Yield, ?Await] ]
									
&ensp;&ensp;[ ElementList[?Yield, ?Await] , Elisionopt ]		&ensp;&ensp;[ ElementList[?Yield, ?Await] , Elisionopt ]
<br><br>								<br><br>
**ElementList[Yield, Await] :**						**ElementList[Yield, Await] :**
									
&ensp;&ensp;Elisionopt AssignmentExpression[+In, ?Yield, 		&ensp;&ensp;Elisionopt AssignmentExpression[+In, ?Yield, 
									
&ensp;&ensp;Elisionopt SpreadElement[?Yield, ?Await]			&ensp;&ensp;Elisionopt SpreadElement[?Yield, ?Await]
									
&ensp;&ensp;ElementList[?Yield, ?Await] , Elisionopt Assi		&ensp;&ensp;ElementList[?Yield, ?Await] , Elisionopt Assi
									
&ensp;&ensp;ElementList[?Yield, ?Await] , Elisionopt Spre		&ensp;&ensp;ElementList[?Yield, ?Await] , Elisionopt Spre
<br><br>								<br><br>
**Elision :**								**Elision :**
									
&ensp;&ensp;,								&ensp;&ensp;,
									
&ensp;&ensp;Elision ,							&ensp;&ensp;Elision ,
<br><br>								<br><br>
**SpreadElement[Yield, Await] :**					**SpreadElement[Yield, Await] :**
									
&ensp;&ensp;... AssignmentExpression[+In, ?Yield, ?Await]		&ensp;&ensp;... AssignmentExpression[+In, ?Yield, ?Await]
<br><br>								<br><br>
**ObjectLiteral[Yield, Await] :**					**ObjectLiteral[Yield, Await] :**
									
&ensp;&ensp;{ }								&ensp;&ensp;{ }
									
&ensp;&ensp;{ PropertyDefinitionList[?Yield, ?Await] }			&ensp;&ensp;{ PropertyDefinitionList[?Yield, ?Await] }
									
&ensp;&ensp;{ PropertyDefinitionList[?Yield, ?Await] , }		&ensp;&ensp;{ PropertyDefinitionList[?Yield, ?Await] , }
<br><br>								<br><br>
**PropertyDefinitionList[Yield, Await] :**				**PropertyDefinitionList[Yield, Await] :**
									
&ensp;&ensp;PropertyDefinition[?Yield, ?Await]				&ensp;&ensp;PropertyDefinition[?Yield, ?Await]
									
&ensp;&ensp;PropertyDefinitionList[?Yield, ?Await] , Prop		&ensp;&ensp;PropertyDefinitionList[?Yield, ?Await] , Prop
<br><br>								<br><br>
**PropertyDefinition[Yield, Await] :**					**PropertyDefinition[Yield, Await] :**
									
&ensp;&ensp;IdentifierReference[?Yield, ?Await]				&ensp;&ensp;IdentifierReference[?Yield, ?Await]
									
&ensp;&ensp;CoverInitializedName[?Yield, ?Await]			&ensp;&ensp;CoverInitializedName[?Yield, ?Await]
									
&ensp;&ensp;PropertyName[?Yield, ?Await] : AssignmentExpr		&ensp;&ensp;PropertyName[?Yield, ?Await] : AssignmentExpr
									
&ensp;&ensp;MethodDefinition[?Yield, ?Await]				&ensp;&ensp;MethodDefinition[?Yield, ?Await]
									
&ensp;&ensp;... AssignmentExpression[+In, ?Yield, ?Await]		&ensp;&ensp;... AssignmentExpression[+In, ?Yield, ?Await]
<br><br>								<br><br>
**PropertyName[Yield, Await] :**					**PropertyName[Yield, Await] :**
									
&ensp;&ensp;LiteralPropertyName						&ensp;&ensp;LiteralPropertyName
									
&ensp;&ensp;ComputedPropertyName[?Yield, ?Await]			&ensp;&ensp;ComputedPropertyName[?Yield, ?Await]
<br><br>								<br><br>
**LiteralPropertyName :**						**LiteralPropertyName :**
									
&ensp;&ensp;IdentifierName						&ensp;&ensp;IdentifierName
									
&ensp;&ensp;StringLiteral						&ensp;&ensp;StringLiteral
									
&ensp;&ensp;NumericLiteral						&ensp;&ensp;NumericLiteral
<br><br>								<br><br>
**ComputedPropertyName[Yield, Await] :**				**ComputedPropertyName[Yield, Await] :**
									
&ensp;&ensp;[ AssignmentExpression[+In, ?Yield, ?Await] ]		&ensp;&ensp;[ AssignmentExpression[+In, ?Yield, ?Await] ]
<br><br>								<br><br>
**CoverInitializedName[Yield, Await] :**				**CoverInitializedName[Yield, Await] :**
									
&ensp;&ensp;IdentifierReference[?Yield, ?Await] Initializ		&ensp;&ensp;IdentifierReference[?Yield, ?Await] Initializ
<br><br>								<br><br>
**Initializer[In, Yield, Await] :**					**Initializer[In, Yield, Await] :**
									
&ensp;&ensp;= AssignmentExpression[?In, ?Yield, ?Await]			&ensp;&ensp;= AssignmentExpression[?In, ?Yield, ?Await]
<br><br>								<br><br>
**TemplateLiteral[Yield, Await, Tagged] :**				**TemplateLiteral[Yield, Await, Tagged] :**
									
&ensp;&ensp;NoSubstitutionTemplate					&ensp;&ensp;NoSubstitutionTemplate
									
&ensp;&ensp;SubstitutionTemplate[?Yield, ?Await, ?Tagged]		&ensp;&ensp;SubstitutionTemplate[?Yield, ?Await, ?Tagged]
<br><br>								<br><br>
**SubstitutionTemplate[Yield, Await, Tagged] :**			**SubstitutionTemplate[Yield, Await, Tagged] :**
									
&ensp;&ensp;TemplateHead Expression[+In, ?Yield, ?Await] 		&ensp;&ensp;TemplateHead Expression[+In, ?Yield, ?Await] 
<br><br>								<br><br>
**TemplateSpans[Yield, Await, Tagged] :**				**TemplateSpans[Yield, Await, Tagged] :**
									
&ensp;&ensp;TemplateTail						&ensp;&ensp;TemplateTail
									
&ensp;&ensp;TemplateMiddleList[?Yield, ?Await, ?Tagged] T		&ensp;&ensp;TemplateMiddleList[?Yield, ?Await, ?Tagged] T
<br><br>								<br><br>
**TemplateMiddleList[Yield, Await, Tagged] :**				**TemplateMiddleList[Yield, Await, Tagged] :**
									
&ensp;&ensp;TemplateMiddle Expression[+In, ?Yield, ?Await		&ensp;&ensp;TemplateMiddle Expression[+In, ?Yield, ?Await
									
&ensp;&ensp;TemplateMiddleList[?Yield, ?Await, ?Tagged] T		&ensp;&ensp;TemplateMiddleList[?Yield, ?Await, ?Tagged] T
<br><br>								<br><br>
**MemberExpression[Yield, Await] :**					**MemberExpression[Yield, Await] :**
									
&ensp;&ensp;PrimaryExpression[?Yield, ?Await]				&ensp;&ensp;PrimaryExpression[?Yield, ?Await]
									
&ensp;&ensp;MemberExpression[?Yield, ?Await] [ Expression		&ensp;&ensp;MemberExpression[?Yield, ?Await] [ Expression
									
&ensp;&ensp;MemberExpression[?Yield, ?Await] . Identifier		&ensp;&ensp;MemberExpression[?Yield, ?Await] . Identifier
									
&ensp;&ensp;MemberExpression[?Yield, ?Await] TemplateLite		&ensp;&ensp;MemberExpression[?Yield, ?Await] TemplateLite
									
&ensp;&ensp;SuperProperty[?Yield, ?Await]				&ensp;&ensp;SuperProperty[?Yield, ?Await]
									
&ensp;&ensp;MetaProperty						&ensp;&ensp;MetaProperty
									
&ensp;&ensp;new MemberExpression[?Yield, ?Await] Argument		&ensp;&ensp;new MemberExpression[?Yield, ?Await] Argument
									
&ensp;&ensp;MemberExpression[?Yield, ?Await] . PrivateIde		&ensp;&ensp;MemberExpression[?Yield, ?Await] . PrivateIde
<br><br>								<br><br>
**SuperProperty[Yield, Await] :**					**SuperProperty[Yield, Await] :**
									
&ensp;&ensp;super [ Expression[+In, ?Yield, ?Await] ]			&ensp;&ensp;super [ Expression[+In, ?Yield, ?Await] ]
									
&ensp;&ensp;super . IdentifierName					&ensp;&ensp;super . IdentifierName
<br><br>								<br><br>
**MetaProperty :**							**MetaProperty :**
									
&ensp;&ensp;NewTarget							&ensp;&ensp;NewTarget
									
&ensp;&ensp;ImportMeta							&ensp;&ensp;ImportMeta
<br><br>								<br><br>
**NewTarget :**								**NewTarget :**
									
&ensp;&ensp;new . target						&ensp;&ensp;new . target
<br><br>								<br><br>
**ImportMeta :**							**ImportMeta :**
									
&ensp;&ensp;import . meta						&ensp;&ensp;import . meta
<br><br>								<br><br>
**NewExpression[Yield, Await] :**					**NewExpression[Yield, Await] :**
									
&ensp;&ensp;MemberExpression[?Yield, ?Await]				&ensp;&ensp;MemberExpression[?Yield, ?Await]
									
&ensp;&ensp;new NewExpression[?Yield, ?Await]				&ensp;&ensp;new NewExpression[?Yield, ?Await]
<br><br>								<br><br>
**CallExpression[Yield, Await] :**					**CallExpression[Yield, Await] :**
									
&ensp;&ensp;CoverCallExpressionAndAsyncArrowHead[?Yield, 		&ensp;&ensp;CoverCallExpressionAndAsyncArrowHead[?Yield, 
									
&ensp;&ensp;SuperCall[?Yield, ?Await]					&ensp;&ensp;SuperCall[?Yield, ?Await]
									
&ensp;&ensp;ImportCall[?Yield, ?Await]					&ensp;&ensp;ImportCall[?Yield, ?Await]
									
&ensp;&ensp;CallExpression[?Yield, ?Await] Arguments[?Yie		&ensp;&ensp;CallExpression[?Yield, ?Await] Arguments[?Yie
									
&ensp;&ensp;CallExpression[?Yield, ?Await] [ Expression[+		&ensp;&ensp;CallExpression[?Yield, ?Await] [ Expression[+
									
&ensp;&ensp;CallExpression[?Yield, ?Await] . IdentifierNa		&ensp;&ensp;CallExpression[?Yield, ?Await] . IdentifierNa
									
&ensp;&ensp;CallExpression[?Yield, ?Await] TemplateLitera		&ensp;&ensp;CallExpression[?Yield, ?Await] TemplateLitera
									
&ensp;&ensp;CallExpression[?Yield, ?Await] . PrivateIdent		&ensp;&ensp;CallExpression[?Yield, ?Await] . PrivateIdent
									
&ensp;&ensp;When processing an instance of the production		&ensp;&ensp;When processing an instance of the production
									
&ensp;&ensp;CallExpression[Yield, Await] : CoverCallExpre		&ensp;&ensp;CallExpression[Yield, Await] : CoverCallExpre
<br><br>								<br><br>
**the interpretation of CoverCallExpressionAndAsyncArrowH		**the interpretation of CoverCallExpressionAndAsyncArrowH
									
&ensp;&ensp;								&ensp;&ensp;
<br><br>								<br><br>
**CallMemberExpression[Yield, Await] :**				**CallMemberExpression[Yield, Await] :**
									
&ensp;&ensp;MemberExpression[?Yield, ?Await] Arguments[?Y		&ensp;&ensp;MemberExpression[?Yield, ?Await] Arguments[?Y
									
&ensp;&ensp;								&ensp;&ensp;
									
&ensp;&ensp;								&ensp;&ensp;
<br><br>								<br><br>
**SuperCall[Yield, Await] :**						**SuperCall[Yield, Await] :**
									
&ensp;&ensp;super Arguments[?Yield, ?Await]				&ensp;&ensp;super Arguments[?Yield, ?Await]
<br><br>								<br><br>
**ImportCall[Yield, Await] :**						**ImportCall[Yield, Await] :**
									
&ensp;&ensp;import ( AssignmentExpression[+In, ?Yield, ?A		&ensp;&ensp;import ( AssignmentExpression[+In, ?Yield, ?A
<br><br>								<br><br>
**Arguments[Yield, Await] :**						**Arguments[Yield, Await] :**
									
&ensp;&ensp;( )								&ensp;&ensp;( )
									
&ensp;&ensp;( ArgumentList[?Yield, ?Await] )				&ensp;&ensp;( ArgumentList[?Yield, ?Await] )
									
&ensp;&ensp;( ArgumentList[?Yield, ?Await] , )				&ensp;&ensp;( ArgumentList[?Yield, ?Await] , )
<br><br>								<br><br>
**ArgumentList[Yield, Await] :**					**ArgumentList[Yield, Await] :**
									
&ensp;&ensp;AssignmentExpression[+In, ?Yield, ?Await]			&ensp;&ensp;AssignmentExpression[+In, ?Yield, ?Await]
									
&ensp;&ensp;... AssignmentExpression[+In, ?Yield, ?Await]		&ensp;&ensp;... AssignmentExpression[+In, ?Yield, ?Await]
									
&ensp;&ensp;ArgumentList[?Yield, ?Await] , AssignmentExpr		&ensp;&ensp;ArgumentList[?Yield, ?Await] , AssignmentExpr
									
&ensp;&ensp;ArgumentList[?Yield, ?Await] , ... Assignment		&ensp;&ensp;ArgumentList[?Yield, ?Await] , ... Assignment
<br><br>								<br><br>
**OptionalExpression[Yield, Await] :**					**OptionalExpression[Yield, Await] :**
									
&ensp;&ensp;MemberExpression[?Yield, ?Await] OptionalChai		&ensp;&ensp;MemberExpression[?Yield, ?Await] OptionalChai
									
&ensp;&ensp;CallExpression[?Yield, ?Await] OptionalChain[		&ensp;&ensp;CallExpression[?Yield, ?Await] OptionalChain[
									
&ensp;&ensp;OptionalExpression[?Yield, ?Await] OptionalCh		&ensp;&ensp;OptionalExpression[?Yield, ?Await] OptionalCh
<br><br>								<br><br>
**OptionalChain[Yield, Await] :**					**OptionalChain[Yield, Await] :**
									
&ensp;&ensp;?. Arguments[?Yield, ?Await]				&ensp;&ensp;?. Arguments[?Yield, ?Await]
									
&ensp;&ensp;?. [ Expression[+In, ?Yield, ?Await] ]			&ensp;&ensp;?. [ Expression[+In, ?Yield, ?Await] ]
									
&ensp;&ensp;?. IdentifierName						&ensp;&ensp;?. IdentifierName
									
&ensp;&ensp;?. TemplateLiteral[?Yield, ?Await, +Tagged]			&ensp;&ensp;?. TemplateLiteral[?Yield, ?Await, +Tagged]
									
&ensp;&ensp;?. PrivateIdentifier					&ensp;&ensp;?. PrivateIdentifier
									
&ensp;&ensp;OptionalChain[?Yield, ?Await] Arguments[?Yiel		&ensp;&ensp;OptionalChain[?Yield, ?Await] Arguments[?Yiel
									
&ensp;&ensp;OptionalChain[?Yield, ?Await] [ Expression[+I		&ensp;&ensp;OptionalChain[?Yield, ?Await] [ Expression[+I
									
&ensp;&ensp;OptionalChain[?Yield, ?Await] . IdentifierNam		&ensp;&ensp;OptionalChain[?Yield, ?Await] . IdentifierNam
									
&ensp;&ensp;OptionalChain[?Yield, ?Await] TemplateLiteral		&ensp;&ensp;OptionalChain[?Yield, ?Await] TemplateLiteral
									
&ensp;&ensp;OptionalChain[?Yield, ?Await] . PrivateIdenti		&ensp;&ensp;OptionalChain[?Yield, ?Await] . PrivateIdenti
<br><br>								<br><br>
**LeftHandSideExpression[Yield, Await] :**				**LeftHandSideExpression[Yield, Await] :**
									
&ensp;&ensp;NewExpression[?Yield, ?Await]				&ensp;&ensp;NewExpression[?Yield, ?Await]
									
&ensp;&ensp;CallExpression[?Yield, ?Await]				&ensp;&ensp;CallExpression[?Yield, ?Await]
									
&ensp;&ensp;OptionalExpression[?Yield, ?Await]				&ensp;&ensp;OptionalExpression[?Yield, ?Await]
<br><br>								<br><br>
**UpdateExpression[Yield, Await] :**					**UpdateExpression[Yield, Await] :**
									
&ensp;&ensp;LeftHandSideExpression[?Yield, ?Await]			&ensp;&ensp;LeftHandSideExpression[?Yield, ?Await]
									
&ensp;&ensp;LeftHandSideExpression[?Yield, ?Await] [no Li		&ensp;&ensp;LeftHandSideExpression[?Yield, ?Await] [no Li
									
&ensp;&ensp;LeftHandSideExpression[?Yield, ?Await] [no Li		&ensp;&ensp;LeftHandSideExpression[?Yield, ?Await] [no Li
									
&ensp;&ensp;++ UnaryExpression[?Yield, ?Await]				&ensp;&ensp;++ UnaryExpression[?Yield, ?Await]
									
&ensp;&ensp;-- UnaryExpression[?Yield, ?Await]				&ensp;&ensp;-- UnaryExpression[?Yield, ?Await]
<br><br>								<br><br>
**UnaryExpression[Yield, Await] :**					**UnaryExpression[Yield, Await] :**
									
&ensp;&ensp;UpdateExpression[?Yield, ?Await]				&ensp;&ensp;UpdateExpression[?Yield, ?Await]
									
&ensp;&ensp;delete UnaryExpression[?Yield, ?Await]			&ensp;&ensp;delete UnaryExpression[?Yield, ?Await]
									
&ensp;&ensp;void UnaryExpression[?Yield, ?Await]			&ensp;&ensp;void UnaryExpression[?Yield, ?Await]
									
&ensp;&ensp;typeof UnaryExpression[?Yield, ?Await]			&ensp;&ensp;typeof UnaryExpression[?Yield, ?Await]
									
&ensp;&ensp;+ UnaryExpression[?Yield, ?Await]				&ensp;&ensp;+ UnaryExpression[?Yield, ?Await]
									
&ensp;&ensp;- UnaryExpression[?Yield, ?Await]				&ensp;&ensp;- UnaryExpression[?Yield, ?Await]
									
&ensp;&ensp;  ~ UnaryExpression[?Yield, ?Await]				&ensp;&ensp;  ~ UnaryExpression[?Yield, ?Await]
									
&ensp;&ensp;  ! UnaryExpression[?Yield, ?Await]				&ensp;&ensp;  ! UnaryExpression[?Yield, ?Await]
									
&ensp;&ensp;  [+Await] AwaitExpression[?Yield]				&ensp;&ensp;  [+Await] AwaitExpression[?Yield]
<br><br>								<br><br>
**ExponentiationExpression[Yield, Await] :**				**ExponentiationExpression[Yield, Await] :**
									
&ensp;&ensp;  UnaryExpression[?Yield, ?Await]				&ensp;&ensp;  UnaryExpression[?Yield, ?Await]
									
&ensp;&ensp;  UpdateExpression[?Yield, ?Await] ** Exponen		&ensp;&ensp;  UpdateExpression[?Yield, ?Await] ** Exponen
<br><br>								<br><br>
**MultiplicativeExpression[Yield, Await] :**				**MultiplicativeExpression[Yield, Await] :**
									
&ensp;&ensp;  ExponentiationExpression[?Yield, ?Await]			&ensp;&ensp;  ExponentiationExpression[?Yield, ?Await]
									
&ensp;&ensp;  MultiplicativeExpression[?Yield, ?Await] Mu		&ensp;&ensp;  MultiplicativeExpression[?Yield, ?Await] Mu
									
&ensp;&ensp;  MultiplicativeOperator : one of				&ensp;&ensp;  MultiplicativeOperator : one of
									
* / %									* / %
<br><br>								<br><br>
**AdditiveExpression[Yield, Await] :**					**AdditiveExpression[Yield, Await] :**
									
&ensp;&ensp;  MultiplicativeExpression[?Yield, ?Await]			&ensp;&ensp;  MultiplicativeExpression[?Yield, ?Await]
									
&ensp;&ensp;  AdditiveExpression[?Yield, ?Await] + Multip		&ensp;&ensp;  AdditiveExpression[?Yield, ?Await] + Multip
									
&ensp;&ensp;  AdditiveExpression[?Yield, ?Await] - Multip		&ensp;&ensp;  AdditiveExpression[?Yield, ?Await] - Multip
<br><br>								<br><br>
**ShiftExpression[Yield, Await] :**					**ShiftExpression[Yield, Await] :**
									
&ensp;&ensp;  AdditiveExpression[?Yield, ?Await]			&ensp;&ensp;  AdditiveExpression[?Yield, ?Await]
									
&ensp;&ensp;  ShiftExpression[?Yield, ?Await] << Additive		&ensp;&ensp;  ShiftExpression[?Yield, ?Await] << Additive
									
&ensp;&ensp;  ShiftExpression[?Yield, ?Await] >> Additive		&ensp;&ensp;  ShiftExpression[?Yield, ?Await] >> Additive
									
&ensp;&ensp;  ShiftExpression[?Yield, ?Await] >>> Additiv		&ensp;&ensp;  ShiftExpression[?Yield, ?Await] >>> Additiv
<br><br>								<br><br>
**RelationalExpression[In, Yield, Await] :**				**RelationalExpression[In, Yield, Await] :**
									
&ensp;&ensp;  ShiftExpression[?Yield, ?Await]				&ensp;&ensp;  ShiftExpression[?Yield, ?Await]
									
&ensp;&ensp;  RelationalExpression[?In, ?Yield, ?Await] <		&ensp;&ensp;  RelationalExpression[?In, ?Yield, ?Await] <
									
&ensp;&ensp;  RelationalExpression[?In, ?Yield, ?Await] >		&ensp;&ensp;  RelationalExpression[?In, ?Yield, ?Await] >
									
&ensp;&ensp;  RelationalExpression[?In, ?Yield, ?Await] <		&ensp;&ensp;  RelationalExpression[?In, ?Yield, ?Await] <
									
&ensp;&ensp;  RelationalExpression[?In, ?Yield, ?Await] >		&ensp;&ensp;  RelationalExpression[?In, ?Yield, ?Await] >
									
&ensp;&ensp;  RelationalExpression[?In, ?Yield, ?Await] i		&ensp;&ensp;  RelationalExpression[?In, ?Yield, ?Await] i
									
&ensp;&ensp;  [+In] RelationalExpression[+In, ?Yield, ?Aw		&ensp;&ensp;  [+In] RelationalExpression[+In, ?Yield, ?Aw
									
&ensp;&ensp;  [+In] PrivateIdentifier in ShiftExpression[		&ensp;&ensp;  [+In] PrivateIdentifier in ShiftExpression[
<br><br>								<br><br>
**EqualityExpression[In, Yield, Await] :**				**EqualityExpression[In, Yield, Await] :**
									
&ensp;&ensp;  RelationalExpression[?In, ?Yield, ?Await]			&ensp;&ensp;  RelationalExpression[?In, ?Yield, ?Await]
									
&ensp;&ensp;  EqualityExpression[?In, ?Yield, ?Await] == 		&ensp;&ensp;  EqualityExpression[?In, ?Yield, ?Await] == 
									
&ensp;&ensp;  EqualityExpression[?In, ?Yield, ?Await] != 		&ensp;&ensp;  EqualityExpression[?In, ?Yield, ?Await] != 
									
&ensp;&ensp;  EqualityExpression[?In, ?Yield, ?Await] ===		&ensp;&ensp;  EqualityExpression[?In, ?Yield, ?Await] ===
									
&ensp;&ensp;  EqualityExpression[?In, ?Yield, ?Await] !==		&ensp;&ensp;  EqualityExpression[?In, ?Yield, ?Await] !==
<br><br>								<br><br>
**BitwiseANDExpression[In, Yield, Await] :**				**BitwiseANDExpression[In, Yield, Await] :**
									
&ensp;&ensp;  EqualityExpression[?In, ?Yield, ?Await]			&ensp;&ensp;  EqualityExpression[?In, ?Yield, ?Await]
									
&ensp;&ensp;  BitwiseANDExpression[?In, ?Yield, ?Await] &		&ensp;&ensp;  BitwiseANDExpression[?In, ?Yield, ?Await] &
<br><br>								<br><br>
**BitwiseXORExpression[In, Yield, Await] :**				**BitwiseXORExpression[In, Yield, Await] :**
									
&ensp;&ensp;  BitwiseANDExpression[?In, ?Yield, ?Await]			&ensp;&ensp;  BitwiseANDExpression[?In, ?Yield, ?Await]
									
&ensp;&ensp;  BitwiseXORExpression[?In, ?Yield, ?Await] ^		&ensp;&ensp;  BitwiseXORExpression[?In, ?Yield, ?Await] ^
<br><br>								<br><br>
**BitwiseORExpression[In, Yield, Await] :**				**BitwiseORExpression[In, Yield, Await] :**
									
&ensp;&ensp;  BitwiseXORExpression[?In, ?Yield, ?Await]			&ensp;&ensp;  BitwiseXORExpression[?In, ?Yield, ?Await]
									
&ensp;&ensp;  BitwiseORExpression[?In, ?Yield, ?Await] | 		&ensp;&ensp;  BitwiseORExpression[?In, ?Yield, ?Await] | 
<br><br>								<br><br>
**LogicalANDExpression[In, Yield, Await] :**				**LogicalANDExpression[In, Yield, Await] :**
									
&ensp;&ensp;  BitwiseORExpression[?In, ?Yield, ?Await]			&ensp;&ensp;  BitwiseORExpression[?In, ?Yield, ?Await]
									
&ensp;&ensp;  LogicalANDExpression[?In, ?Yield, ?Await] &		&ensp;&ensp;  LogicalANDExpression[?In, ?Yield, ?Await] &
<br><br>								<br><br>
**LogicalORExpression[In, Yield, Await] :**				**LogicalORExpression[In, Yield, Await] :**
									
&ensp;&ensp;  LogicalANDExpression[?In, ?Yield, ?Await]			&ensp;&ensp;  LogicalANDExpression[?In, ?Yield, ?Await]
									
&ensp;&ensp;  LogicalORExpression[?In, ?Yield, ?Await] ||		&ensp;&ensp;  LogicalORExpression[?In, ?Yield, ?Await] ||
<br><br>								<br><br>
**CoalesceExpression[In, Yield, Await] :**				**CoalesceExpression[In, Yield, Await] :**
									
&ensp;&ensp;  CoalesceExpressionHead[?In, ?Yield, ?Await]		&ensp;&ensp;  CoalesceExpressionHead[?In, ?Yield, ?Await]
<br><br>								<br><br>
**CoalesceExpressionHead[In, Yield, Await] :**				**CoalesceExpressionHead[In, Yield, Await] :**
									
&ensp;&ensp;  CoalesceExpression[?In, ?Yield, ?Await]			&ensp;&ensp;  CoalesceExpression[?In, ?Yield, ?Await]
									
&ensp;&ensp;  BitwiseORExpression[?In, ?Yield, ?Await]			&ensp;&ensp;  BitwiseORExpression[?In, ?Yield, ?Await]
<br><br>								<br><br>
**ShortCircuitExpression[In, Yield, Await] :**				**ShortCircuitExpression[In, Yield, Await] :**
									
&ensp;&ensp;  LogicalORExpression[?In, ?Yield, ?Await]			&ensp;&ensp;  LogicalORExpression[?In, ?Yield, ?Await]
									
&ensp;&ensp;  CoalesceExpression[?In, ?Yield, ?Await]			&ensp;&ensp;  CoalesceExpression[?In, ?Yield, ?Await]
<br><br>								<br><br>
**ConditionalExpression[In, Yield, Await] :**				**ConditionalExpression[In, Yield, Await] :**
									
&ensp;&ensp;  ShortCircuitExpression[?In, ?Yield, ?Await]		&ensp;&ensp;  ShortCircuitExpression[?In, ?Yield, ?Await]
									
&ensp;&ensp;  ShortCircuitExpression[?In, ?Yield, ?Await]		&ensp;&ensp;  ShortCircuitExpression[?In, ?Yield, ?Await]
<br><br>								<br><br>
**AssignmentExpression[In, Yield, Await] :**				**AssignmentExpression[In, Yield, Await] :**
									
&ensp;&ensp;  ConditionalExpression[?In, ?Yield, ?Await]		&ensp;&ensp;  ConditionalExpression[?In, ?Yield, ?Await]
									
&ensp;&ensp;  [+Yield] YieldExpression[?In, ?Await]			&ensp;&ensp;  [+Yield] YieldExpression[?In, ?Await]
									
&ensp;&ensp;  ArrowFunction[?In, ?Yield, ?Await]			&ensp;&ensp;  ArrowFunction[?In, ?Yield, ?Await]
									
&ensp;&ensp;  AsyncArrowFunction[?In, ?Yield, ?Await]			&ensp;&ensp;  AsyncArrowFunction[?In, ?Yield, ?Await]
									
&ensp;&ensp;  LeftHandSideExpression[?Yield, ?Await] = As		&ensp;&ensp;  LeftHandSideExpression[?Yield, ?Await] = As
									
&ensp;&ensp;  LeftHandSideExpression[?Yield, ?Await] Assi		&ensp;&ensp;  LeftHandSideExpression[?Yield, ?Await] Assi
									
&ensp;&ensp;  LeftHandSideExpression[?Yield, ?Await] &&= 		&ensp;&ensp;  LeftHandSideExpression[?Yield, ?Await] &&= 
									
&ensp;&ensp;  LeftHandSideExpression[?Yield, ?Await] ||= 		&ensp;&ensp;  LeftHandSideExpression[?Yield, ?Await] ||= 
									
&ensp;&ensp;  LeftHandSideExpression[?Yield, ?Await] ??= 		&ensp;&ensp;  LeftHandSideExpression[?Yield, ?Await] ??= 
									
&ensp;&ensp;  AssignmentOperator : one of				&ensp;&ensp;  AssignmentOperator : one of
									
&ensp;&ensp;  *= /= %= += -= <<= >>= >>>= &= ^= |= **=			&ensp;&ensp;  *= /= %= += -= <<= >>= >>>= &= ^= |= **=
									
&ensp;&ensp;  In certain circumstances when processing an		&ensp;&ensp;  In certain circumstances when processing an
									
&ensp;&ensp;  AssignmentExpression[In, Yield, Await] : Le		&ensp;&ensp;  AssignmentExpression[In, Yield, Await] : Le
<br><br>								<br><br>
**the interpretation of LeftHandSideExpression is refined		**the interpretation of LeftHandSideExpression is refined
									
&ensp;&ensp;								&ensp;&ensp;
<br><br>								<br><br>
**AssignmentPattern[Yield, Await] :**					**AssignmentPattern[Yield, Await] :**
									
&ensp;&ensp;ObjectAssignmentPattern[?Yield, ?Await]			&ensp;&ensp;ObjectAssignmentPattern[?Yield, ?Await]
									
&ensp;&ensp;ArrayAssignmentPattern[?Yield, ?Await]			&ensp;&ensp;ArrayAssignmentPattern[?Yield, ?Await]
<br><br>								<br><br>
**ObjectAssignmentPattern[Yield, Await] :**				**ObjectAssignmentPattern[Yield, Await] :**
									
&ensp;&ensp;{ }								&ensp;&ensp;{ }
									
&ensp;&ensp;{ AssignmentRestProperty[?Yield, ?Await] }			&ensp;&ensp;{ AssignmentRestProperty[?Yield, ?Await] }
									
&ensp;&ensp;{ AssignmentPropertyList[?Yield, ?Await] }			&ensp;&ensp;{ AssignmentPropertyList[?Yield, ?Await] }
									
&ensp;&ensp;{ AssignmentPropertyList[?Yield, ?Await] , As		&ensp;&ensp;{ AssignmentPropertyList[?Yield, ?Await] , As
<br><br>								<br><br>
**ArrayAssignmentPattern[Yield, Await] :**				**ArrayAssignmentPattern[Yield, Await] :**
									
&ensp;&ensp;[ Elisionopt AssignmentRestElement[?Yield, ?A		&ensp;&ensp;[ Elisionopt AssignmentRestElement[?Yield, ?A
									
&ensp;&ensp;[ AssignmentElementList[?Yield, ?Await] ]			&ensp;&ensp;[ AssignmentElementList[?Yield, ?Await] ]
									
&ensp;&ensp;[ AssignmentElementList[?Yield, ?Await] , Eli		&ensp;&ensp;[ AssignmentElementList[?Yield, ?Await] , Eli
<br><br>								<br><br>
**AssignmentRestProperty[Yield, Await] :**				**AssignmentRestProperty[Yield, Await] :**
									
&ensp;&ensp;... DestructuringAssignmentTarget[?Yield, ?Aw		&ensp;&ensp;... DestructuringAssignmentTarget[?Yield, ?Aw
<br><br>								<br><br>
**AssignmentPropertyList[Yield, Await] :**				**AssignmentPropertyList[Yield, Await] :**
									
&ensp;&ensp;AssignmentProperty[?Yield, ?Await]				&ensp;&ensp;AssignmentProperty[?Yield, ?Await]
									
&ensp;&ensp;AssignmentPropertyList[?Yield, ?Await] , Assi		&ensp;&ensp;AssignmentPropertyList[?Yield, ?Await] , Assi
<br><br>								<br><br>
**AssignmentElementList[Yield, Await] :**				**AssignmentElementList[Yield, Await] :**
									
&ensp;&ensp;AssignmentElisionElement[?Yield, ?Await]			&ensp;&ensp;AssignmentElisionElement[?Yield, ?Await]
									
&ensp;&ensp;AssignmentElementList[?Yield, ?Await] , Assig		&ensp;&ensp;AssignmentElementList[?Yield, ?Await] , Assig
<br><br>								<br><br>
**AssignmentElisionElement[Yield, Await] :**				**AssignmentElisionElement[Yield, Await] :**
									
&ensp;&ensp;Elisionopt AssignmentElement[?Yield, ?Await]		&ensp;&ensp;Elisionopt AssignmentElement[?Yield, ?Await]
<br><br>								<br><br>
**AssignmentProperty[Yield, Await] :**					**AssignmentProperty[Yield, Await] :**
									
&ensp;&ensp;IdentifierReference[?Yield, ?Await] Initializ		&ensp;&ensp;IdentifierReference[?Yield, ?Await] Initializ
									
&ensp;&ensp;PropertyName[?Yield, ?Await] : AssignmentElem		&ensp;&ensp;PropertyName[?Yield, ?Await] : AssignmentElem
<br><br>								<br><br>
**AssignmentElement[Yield, Await] :**					**AssignmentElement[Yield, Await] :**
									
&ensp;&ensp;DestructuringAssignmentTarget[?Yield, ?Await]		&ensp;&ensp;DestructuringAssignmentTarget[?Yield, ?Await]
<br><br>								<br><br>
**AssignmentRestElement[Yield, Await] :**				**AssignmentRestElement[Yield, Await] :**
									
&ensp;&ensp;... DestructuringAssignmentTarget[?Yield, ?Aw		&ensp;&ensp;... DestructuringAssignmentTarget[?Yield, ?Aw
<br><br>								<br><br>
**DestructuringAssignmentTarget[Yield, Await] :**			**DestructuringAssignmentTarget[Yield, Await] :**
									
&ensp;&ensp;LeftHandSideExpression[?Yield, ?Await]			&ensp;&ensp;LeftHandSideExpression[?Yield, ?Await]
									
&ensp;&ensp;								&ensp;&ensp;
									
&ensp;&ensp;								&ensp;&ensp;
<br><br>								<br><br>
**Expression[In, Yield, Await] :**					**Expression[In, Yield, Await] :**
									
&ensp;&ensp;AssignmentExpression[?In, ?Yield, ?Await]			&ensp;&ensp;AssignmentExpression[?In, ?Yield, ?Await]
									
&ensp;&ensp;Expression[?In, ?Yield, ?Await] , AssignmentE		&ensp;&ensp;Expression[?In, ?Yield, ?Await] , AssignmentE
									
									
## Statements								## Statements
									
**Statement[Yield, Await, Return] :**					**Statement[Yield, Await, Return] :**
									
&ensp;&ensp;BlockStatement[?Yield, ?Await, ?Return]			&ensp;&ensp;BlockStatement[?Yield, ?Await, ?Return]
									
&ensp;&ensp;VariableStatement[?Yield, ?Await]				&ensp;&ensp;VariableStatement[?Yield, ?Await]
									
&ensp;&ensp;EmptyStatement					<       
								<       
&ensp;&ensp;ExpressionStatement[?Yield, ?Await]				&ensp;&ensp;ExpressionStatement[?Yield, ?Await]
									
&ensp;&ensp;IfStatement[?Yield, ?Await, ?Return]			&ensp;&ensp;IfStatement[?Yield, ?Await, ?Return]
									
&ensp;&ensp;BreakableStatement[?Yield, ?Await, ?Return]			&ensp;&ensp;BreakableStatement[?Yield, ?Await, ?Return]
									
&ensp;&ensp;ContinueStatement[?Yield, ?Await]				&ensp;&ensp;ContinueStatement[?Yield, ?Await]
									
&ensp;&ensp;BreakStatement[?Yield, ?Await]				&ensp;&ensp;BreakStatement[?Yield, ?Await]
									
&ensp;&ensp;[+Return] ReturnStatement[?Yield, ?Await]			&ensp;&ensp;[+Return] ReturnStatement[?Yield, ?Await]
									
&ensp;&ensp;WithStatement[?Yield, ?Await, ?Return]		<       
								<       
&ensp;&ensp;LabelledStatement[?Yield, ?Await, ?Return]		<       
								<       
&ensp;&ensp;ThrowStatement[?Yield, ?Await]			<       
								<       
&ensp;&ensp;TryStatement[?Yield, ?Await, ?Return]		<       
								<       
&ensp;&ensp;DebuggerStatement						&ensp;&ensp;DebuggerStatement
<br><br>								<br><br>
**Declaration[Yield, Await] :**						**Declaration[Yield, Await] :**
									
&ensp;&ensp;HoistableDeclaration[?Yield, ?Await, ~Default		&ensp;&ensp;HoistableDeclaration[?Yield, ?Await, ~Default
									
&ensp;&ensp;ClassDeclaration[?Yield, ?Await, ~Default]		<       
								<       
&ensp;&ensp;LexicalDeclaration[+In, ?Yield, ?Await]			&ensp;&ensp;LexicalDeclaration[+In, ?Yield, ?Await]
<br><br>								<br><br>
**HoistableDeclaration[Yield, Await, Default] :**			**HoistableDeclaration[Yield, Await, Default] :**
									
&ensp;&ensp;FunctionDeclaration[?Yield, ?Await, ?Default]		&ensp;&ensp;FunctionDeclaration[?Yield, ?Await, ?Default]
									
&ensp;&ensp;GeneratorDeclaration[?Yield, ?Await, ?Default		&ensp;&ensp;GeneratorDeclaration[?Yield, ?Await, ?Default
									
&ensp;&ensp;AsyncFunctionDeclaration[?Yield, ?Await, ?Def		&ensp;&ensp;AsyncFunctionDeclaration[?Yield, ?Await, ?Def
									
&ensp;&ensp;AsyncGeneratorDeclaration[?Yield, ?Await, ?De		&ensp;&ensp;AsyncGeneratorDeclaration[?Yield, ?Await, ?De
<br><br>								<br><br>
**BreakableStatement[Yield, Await, Return] :**				**BreakableStatement[Yield, Await, Return] :**
									
&ensp;&ensp;IterationStatement[?Yield, ?Await, ?Return]			&ensp;&ensp;IterationStatement[?Yield, ?Await, ?Return]
									
&ensp;&ensp;SwitchStatement[?Yield, ?Await, ?Return]			&ensp;&ensp;SwitchStatement[?Yield, ?Await, ?Return]
<br><br>								<br><br>
**BlockStatement[Yield, Await, Return] :**				**BlockStatement[Yield, Await, Return] :**
									
&ensp;&ensp;Block[?Yield, ?Await, ?Return]				&ensp;&ensp;Block[?Yield, ?Await, ?Return]
<br><br>								<br><br>
**Block[Yield, Await, Return] :**					**Block[Yield, Await, Return] :**
									
&ensp;&ensp;{ StatementList[?Yield, ?Await, ?Return]opt }		&ensp;&ensp;{ StatementList[?Yield, ?Await, ?Return]opt }
<br><br>								<br><br>
**StatementList[Yield, Await, Return] :**				**StatementList[Yield, Await, Return] :**
									
&ensp;&ensp;StatementListItem[?Yield, ?Await, ?Return]			&ensp;&ensp;StatementListItem[?Yield, ?Await, ?Return]
									
&ensp;&ensp;StatementList[?Yield, ?Await, ?Return] Statem		&ensp;&ensp;StatementList[?Yield, ?Await, ?Return] Statem
<br><br>								<br><br>
**StatementListItem[Yield, Await, Return] :**				**StatementListItem[Yield, Await, Return] :**
									
&ensp;&ensp;Statement[?Yield, ?Await, ?Return]				&ensp;&ensp;Statement[?Yield, ?Await, ?Return]
									
&ensp;&ensp;Declaration[?Yield, ?Await]					&ensp;&ensp;Declaration[?Yield, ?Await]
<br><br>								<br><br>
**LexicalDeclaration[In, Yield, Await] :**				**LexicalDeclaration[In, Yield, Await] :**
									
&ensp;&ensp;LetOrConst BindingList[?In, ?Yield, ?Await] ;		&ensp;&ensp;LetOrConst BindingList[?In, ?Yield, ?Await] ;
<br><br>								<br><br>
**LetOrConst :**							**LetOrConst :**
									
&ensp;&ensp;let								&ensp;&ensp;let
									
&ensp;&ensp;const							&ensp;&ensp;const
<br><br>								<br><br>
**BindingList[In, Yield, Await] :**					**BindingList[In, Yield, Await] :**
									
&ensp;&ensp;LexicalBinding[?In, ?Yield, ?Await]				&ensp;&ensp;LexicalBinding[?In, ?Yield, ?Await]
									
&ensp;&ensp;BindingList[?In, ?Yield, ?Await] , LexicalBin		&ensp;&ensp;BindingList[?In, ?Yield, ?Await] , LexicalBin
<br><br>								<br><br>
**LexicalBinding[In, Yield, Await] :**					**LexicalBinding[In, Yield, Await] :**
									
&ensp;&ensp;BindingIdentifier[?Yield, ?Await] Initializer		&ensp;&ensp;BindingIdentifier[?Yield, ?Await] Initializer
									
&ensp;&ensp;BindingPattern[?Yield, ?Await] Initializer[?I		&ensp;&ensp;BindingPattern[?Yield, ?Await] Initializer[?I
<br><br>								<br><br>
**VariableStatement[Yield, Await] :**					**VariableStatement[Yield, Await] :**
									
&ensp;&ensp;var VariableDeclarationList[+In, ?Yield, ?Awa		&ensp;&ensp;var VariableDeclarationList[+In, ?Yield, ?Awa
<br><br>								<br><br>
**VariableDeclarationList[In, Yield, Await] :**				**VariableDeclarationList[In, Yield, Await] :**
									
&ensp;&ensp;VariableDeclaration[?In, ?Yield, ?Await]			&ensp;&ensp;VariableDeclaration[?In, ?Yield, ?Await]
									
&ensp;&ensp;VariableDeclarationList[?In, ?Yield, ?Await] 		&ensp;&ensp;VariableDeclarationList[?In, ?Yield, ?Await] 
<br><br>								<br><br>
**VariableDeclaration[In, Yield, Await] :**				**VariableDeclaration[In, Yield, Await] :**
									
&ensp;&ensp;BindingIdentifier[?Yield, ?Await] Initializer		&ensp;&ensp;BindingIdentifier[?Yield, ?Await] Initializer
									
&ensp;&ensp;BindingPattern[?Yield, ?Await] Initializer[?I		&ensp;&ensp;BindingPattern[?Yield, ?Await] Initializer[?I
<br><br>								<br><br>
**BindingPattern[Yield, Await] :**					**BindingPattern[Yield, Await] :**
									
&ensp;&ensp;ObjectBindingPattern[?Yield, ?Await]			&ensp;&ensp;ObjectBindingPattern[?Yield, ?Await]
									
&ensp;&ensp;ArrayBindingPattern[?Yield, ?Await]				&ensp;&ensp;ArrayBindingPattern[?Yield, ?Await]
<br><br>								<br><br>
**ObjectBindingPattern[Yield, Await] :**				**ObjectBindingPattern[Yield, Await] :**
									
&ensp;&ensp;{ }								&ensp;&ensp;{ }
									
&ensp;&ensp;{ BindingRestProperty[?Yield, ?Await] }			&ensp;&ensp;{ BindingRestProperty[?Yield, ?Await] }
									
&ensp;&ensp;{ BindingPropertyList[?Yield, ?Await] }			&ensp;&ensp;{ BindingPropertyList[?Yield, ?Await] }
									
&ensp;&ensp;{ BindingPropertyList[?Yield, ?Await] , Bindi		&ensp;&ensp;{ BindingPropertyList[?Yield, ?Await] , Bindi
<br><br>								<br><br>
**ArrayBindingPattern[Yield, Await] :**					**ArrayBindingPattern[Yield, Await] :**
									
&ensp;&ensp;[ Elisionopt BindingRestElement[?Yield, ?Awai		&ensp;&ensp;[ Elisionopt BindingRestElement[?Yield, ?Awai
									
&ensp;&ensp;[ BindingElementList[?Yield, ?Await] ]			&ensp;&ensp;[ BindingElementList[?Yield, ?Await] ]
									
&ensp;&ensp;[ BindingElementList[?Yield, ?Await] , Elisio		&ensp;&ensp;[ BindingElementList[?Yield, ?Await] , Elisio
<br><br>								<br><br>
**BindingRestProperty[Yield, Await] :**					**BindingRestProperty[Yield, Await] :**
									
&ensp;&ensp;... BindingIdentifier[?Yield, ?Await]			&ensp;&ensp;... BindingIdentifier[?Yield, ?Await]
<br><br>								<br><br>
**BindingPropertyList[Yield, Await] :**					**BindingPropertyList[Yield, Await] :**
									
&ensp;&ensp;BindingProperty[?Yield, ?Await]				&ensp;&ensp;BindingProperty[?Yield, ?Await]
									
&ensp;&ensp;BindingPropertyList[?Yield, ?Await] , Binding		&ensp;&ensp;BindingPropertyList[?Yield, ?Await] , Binding
<br><br>								<br><br>
**BindingElementList[Yield, Await] :**					**BindingElementList[Yield, Await] :**
									
&ensp;&ensp;BindingElisionElement[?Yield, ?Await]			&ensp;&ensp;BindingElisionElement[?Yield, ?Await]
									
&ensp;&ensp;BindingElementList[?Yield, ?Await] , BindingE		&ensp;&ensp;BindingElementList[?Yield, ?Await] , BindingE
<br><br>								<br><br>
**BindingElisionElement[Yield, Await] :**				**BindingElisionElement[Yield, Await] :**
									
&ensp;&ensp;Elisionopt BindingElement[?Yield, ?Await]			&ensp;&ensp;Elisionopt BindingElement[?Yield, ?Await]
<br><br>								<br><br>
**BindingProperty[Yield, Await] :**					**BindingProperty[Yield, Await] :**
									
&ensp;&ensp;SingleNameBinding[?Yield, ?Await]				&ensp;&ensp;SingleNameBinding[?Yield, ?Await]
									
&ensp;&ensp;PropertyName[?Yield, ?Await] : BindingElement		&ensp;&ensp;PropertyName[?Yield, ?Await] : BindingElement
<br><br>								<br><br>
**BindingElement[Yield, Await] :**					**BindingElement[Yield, Await] :**
									
&ensp;&ensp;SingleNameBinding[?Yield, ?Await]				&ensp;&ensp;SingleNameBinding[?Yield, ?Await]
									
&ensp;&ensp;BindingPattern[?Yield, ?Await] Initializer[+I		&ensp;&ensp;BindingPattern[?Yield, ?Await] Initializer[+I
<br><br>								<br><br>
**SingleNameBinding[Yield, Await] :**					**SingleNameBinding[Yield, Await] :**
									
&ensp;&ensp;BindingIdentifier[?Yield, ?Await] Initializer		&ensp;&ensp;BindingIdentifier[?Yield, ?Await] Initializer
<br><br>								<br><br>
**BindingRestElement[Yield, Await] :**					**BindingRestElement[Yield, Await] :**
									
&ensp;&ensp;... BindingIdentifier[?Yield, ?Await]			&ensp;&ensp;... BindingIdentifier[?Yield, ?Await]
									
&ensp;&ensp;... BindingPattern[?Yield, ?Await]				&ensp;&ensp;... BindingPattern[?Yield, ?Await]
<br><br>								<br><br>
**EmptyStatement :**							**EmptyStatement :**
									
&ensp;&ensp;;								&ensp;&ensp;;
<br><br>								<br><br>
**ExpressionStatement[Yield, Await] :**					**ExpressionStatement[Yield, Await] :**
									
&ensp;&ensp;[lookahead ∉ { {, function, async [no LineT		&ensp;&ensp;[lookahead ∉ { {, function, async [no LineT
<br><br>								<br><br>
**IfStatement[Yield, Await, Return] :**					**IfStatement[Yield, Await, Return] :**
									
&ensp;&ensp;if ( Expression[+In, ?Yield, ?Await] ) Statem		&ensp;&ensp;if ( Expression[+In, ?Yield, ?Await] ) Statem
									
&ensp;&ensp;if ( Expression[+In, ?Yield, ?Await] ) Statem		&ensp;&ensp;if ( Expression[+In, ?Yield, ?Await] ) Statem
<br><br>								<br><br>
**IterationStatement[Yield, Await, Return] :**				**IterationStatement[Yield, Await, Return] :**
									
&ensp;&ensp;DoWhileStatement[?Yield, ?Await, ?Return]			&ensp;&ensp;DoWhileStatement[?Yield, ?Await, ?Return]
									
&ensp;&ensp;WhileStatement[?Yield, ?Await, ?Return]			&ensp;&ensp;WhileStatement[?Yield, ?Await, ?Return]
									
&ensp;&ensp;ForStatement[?Yield, ?Await, ?Return]			&ensp;&ensp;ForStatement[?Yield, ?Await, ?Return]
									
&ensp;&ensp;ForInOfStatement[?Yield, ?Await, ?Return]			&ensp;&ensp;ForInOfStatement[?Yield, ?Await, ?Return]
<br><br>								<br><br>
**DoWhileStatement[Yield, Await, Return] :**				**DoWhileStatement[Yield, Await, Return] :**
									
&ensp;&ensp;do Statement[?Yield, ?Await, ?Return] while (		&ensp;&ensp;do Statement[?Yield, ?Await, ?Return] while (
<br><br>								<br><br>
**WhileStatement[Yield, Await, Return] :**				**WhileStatement[Yield, Await, Return] :**
									
&ensp;&ensp;while ( Expression[+In, ?Yield, ?Await] ) Sta		&ensp;&ensp;while ( Expression[+In, ?Yield, ?Await] ) Sta
<br><br>								<br><br>
**ForStatement[Yield, Await, Return] :**				**ForStatement[Yield, Await, Return] :**
									
&ensp;&ensp;for ( [lookahead ≠ let [] Expression[~In, ?		&ensp;&ensp;for ( [lookahead ≠ let [] Expression[~In, ?
									
&ensp;&ensp;for ( var VariableDeclarationList[~In, ?Yield		&ensp;&ensp;for ( var VariableDeclarationList[~In, ?Yield
									
&ensp;&ensp;for ( LexicalDeclaration[~In, ?Yield, ?Await]		&ensp;&ensp;for ( LexicalDeclaration[~In, ?Yield, ?Await]
<br><br>								<br><br>
**ForInOfStatement[Yield, Await, Return] :**				**ForInOfStatement[Yield, Await, Return] :**
									
&ensp;&ensp;for ( [lookahead ≠ let [] LeftHandSideExpre       <       
								<       
&ensp;&ensp;for ( var ForBinding[?Yield, ?Await] in Expre       <       
								<       
&ensp;&ensp;for ( ForDeclaration[?Yield, ?Await] in Expre       <       
								<       
&ensp;&ensp;for ( [lookahead ∉ { let, async of }] LeftH       <       
								<       
&ensp;&ensp;for ( var ForBinding[?Yield, ?Await] of Assig       <       
								<       
&ensp;&ensp;for ( ForDeclaration[?Yield, ?Await] of Assig		&ensp;&ensp;for ( ForDeclaration[?Yield, ?Await] of Assig
									
&ensp;&ensp;[+Await] for await ( [lookahead ≠ let] Left       <       
								<       
&ensp;&ensp;[+Await] for await ( var ForBinding[?Yield, ?       <       
								<       
&ensp;&ensp;[+Await] for await ( ForDeclaration[?Yield, ?		&ensp;&ensp;[+Await] for await ( ForDeclaration[?Yield, ?
<br><br>								<br><br>
**ForDeclaration[Yield, Await] :**					**ForDeclaration[Yield, Await] :**
									
&ensp;&ensp;LetOrConst ForBinding[?Yield, ?Await]			&ensp;&ensp;LetOrConst ForBinding[?Yield, ?Await]
<br><br>								<br><br>
**ForBinding[Yield, Await] :**						**ForBinding[Yield, Await] :**
									
&ensp;&ensp;BindingIdentifier[?Yield, ?Await]				&ensp;&ensp;BindingIdentifier[?Yield, ?Await]
									
&ensp;&ensp;BindingPattern[?Yield, ?Await]				&ensp;&ensp;BindingPattern[?Yield, ?Await]
<br><br>								<br><br>
**ContinueStatement[Yield, Await] :**					**ContinueStatement[Yield, Await] :**
									
&ensp;&ensp;continue ;							&ensp;&ensp;continue ;
									
&ensp;&ensp;continue [no LineTerminator here] LabelIdenti		&ensp;&ensp;continue [no LineTerminator here] LabelIdenti
<br><br>								<br><br>
**BreakStatement[Yield, Await] :**					**BreakStatement[Yield, Await] :**
									
&ensp;&ensp;break ;							&ensp;&ensp;break ;
									
&ensp;&ensp;break [no LineTerminator here] LabelIdentifie		&ensp;&ensp;break [no LineTerminator here] LabelIdentifie
<br><br>								<br><br>
**ReturnStatement[Yield, Await] :**					**ReturnStatement[Yield, Await] :**
									
&ensp;&ensp;return ;							&ensp;&ensp;return ;
									
&ensp;&ensp;return [no LineTerminator here] Expression[+I		&ensp;&ensp;return [no LineTerminator here] Expression[+I
<br><br>								<br><br>
**WithStatement[Yield, Await, Return] :**			<       
								<       
&ensp;&ensp;with ( Expression[+In, ?Yield, ?Await] ) Stat       <       
<br><br>							<       
**SwitchStatement[Yield, Await, Return] :**				**SwitchStatement[Yield, Await, Return] :**
									
&ensp;&ensp;switch ( Expression[+In, ?Yield, ?Await] ) Ca		&ensp;&ensp;switch ( Expression[+In, ?Yield, ?Await] ) Ca
<br><br>								<br><br>
**CaseBlock[Yield, Await, Return] :**					**CaseBlock[Yield, Await, Return] :**
									
&ensp;&ensp;{ CaseClauses[?Yield, ?Await, ?Return]opt }			&ensp;&ensp;{ CaseClauses[?Yield, ?Await, ?Return]opt }
									
&ensp;&ensp;{ CaseClauses[?Yield, ?Await, ?Return]opt Def		&ensp;&ensp;{ CaseClauses[?Yield, ?Await, ?Return]opt Def
									
&ensp;&ensp;CaseClauses[Yield, Await, Return] :				&ensp;&ensp;CaseClauses[Yield, Await, Return] :
<br><br>								<br><br>
**CaseClause[?Yield, ?Await, ?Return]**					**CaseClause[?Yield, ?Await, ?Return]**
									
&ensp;&ensp;CaseClauses[?Yield, ?Await, ?Return] CaseClau		&ensp;&ensp;CaseClauses[?Yield, ?Await, ?Return] CaseClau
<br><br>								<br><br>
**CaseClause[Yield, Await, Return] :**					**CaseClause[Yield, Await, Return] :**
									
&ensp;&ensp;case Expression[+In, ?Yield, ?Await] : Statem		&ensp;&ensp;case Expression[+In, ?Yield, ?Await] : Statem
<br><br>								<br><br>
**DefaultClause[Yield, Await, Return] :**				**DefaultClause[Yield, Await, Return] :**
									
&ensp;&ensp;default : StatementList[?Yield, ?Await, ?Retu		&ensp;&ensp;default : StatementList[?Yield, ?Await, ?Retu
<br><br>							<       
**LabelledStatement[Yield, Await, Return] :**			<       
								<       
&ensp;&ensp;LabelIdentifier[?Yield, ?Await] : LabelledIte       <       
<br><br>							<       
**LabelledItem[Yield, Await, Return] :**			<       
								<       
&ensp;&ensp;Statement[?Yield, ?Await, ?Return]			<       
								<       
&ensp;&ensp;FunctionDeclaration[?Yield, ?Await, ~Default]       <       
<br><br>							<       
**ThrowStatement[Yield, Await] :**				<       
								<       
&ensp;&ensp;throw [no LineTerminator here] Expression[+In       <       
<br><br>							<       
**TryStatement[Yield, Await, Return] :**			<       
								<       
&ensp;&ensp;try Block[?Yield, ?Await, ?Return] Catch[?Yie       <       
								<       
&ensp;&ensp;try Block[?Yield, ?Await, ?Return] Finally[?Y       <       
								<       
&ensp;&ensp;try Block[?Yield, ?Await, ?Return] Catch[?Yie       <       
<br><br>							<       
**Catch[Yield, Await, Return] :**				<       
								<       
&ensp;&ensp;catch ( CatchParameter[?Yield, ?Await] ) Bloc       <       
								<       
&ensp;&ensp;catch Block[?Yield, ?Await, ?Return]		<       
<br><br>							<       
**Finally[Yield, Await, Return] :**				<       
								<       
&ensp;&ensp;finally Block[?Yield, ?Await, ?Return]		<       
<br><br>							<       
**CatchParameter[Yield, Await] :**				<       
								<       
&ensp;&ensp;BindingIdentifier[?Yield, ?Await]			<       
								<       
&ensp;&ensp;BindingPattern[?Yield, ?Await]			<       
<br><br>								<br><br>
**DebuggerStatement :**							**DebuggerStatement :**
									
&ensp;&ensp; debugger ;							&ensp;&ensp; debugger ;
									
									
## Functions and Classes						## Functions and Classes
									
**UniqueFormalParameters[Yield, Await] :**				**UniqueFormalParameters[Yield, Await] :**
									
&ensp;&ensp;FormalParameters[?Yield, ?Await]				&ensp;&ensp;FormalParameters[?Yield, ?Await]
<br><br>								<br><br>
**FormalParameters[Yield, Await] :**					**FormalParameters[Yield, Await] :**
									
&ensp;&ensp; [empty]							&ensp;&ensp; [empty]
									
&ensp;&ensp; FunctionRestParameter[?Yield, ?Await]			&ensp;&ensp; FunctionRestParameter[?Yield, ?Await]
									
&ensp;&ensp; FormalParameterList[?Yield, ?Await]			&ensp;&ensp; FormalParameterList[?Yield, ?Await]
									
&ensp;&ensp; FormalParameterList[?Yield, ?Await] ,			&ensp;&ensp; FormalParameterList[?Yield, ?Await] ,
									
&ensp;&ensp; FormalParameterList[?Yield, ?Await] , Functi		&ensp;&ensp; FormalParameterList[?Yield, ?Await] , Functi
									
&ensp;&ensp; FormalParameterList[Yield, Await] :			&ensp;&ensp; FormalParameterList[Yield, Await] :
									
&ensp;&ensp; FormalParameter[?Yield, ?Await]				&ensp;&ensp; FormalParameter[?Yield, ?Await]
<br><br>								<br><br>
**FormalParameterList[?Yield, ?Await] , FormalParameter[?		**FormalParameterList[?Yield, ?Await] , FormalParameter[?
									
&ensp;&ensp; FunctionRestParameter[Yield, Await] :			&ensp;&ensp; FunctionRestParameter[Yield, Await] :
									
&ensp;&ensp; BindingRestElement[?Yield, ?Await]				&ensp;&ensp; BindingRestElement[?Yield, ?Await]
<br><br>								<br><br>
**FormalParameter[Yield, Await] :**					**FormalParameter[Yield, Await] :**
									
&ensp;&ensp; BindingElement[?Yield, ?Await]				&ensp;&ensp; BindingElement[?Yield, ?Await]
<br><br>								<br><br>
**FunctionDeclaration[Yield, Await, Default] :**			**FunctionDeclaration[Yield, Await, Default] :**
									
&ensp;&ensp; function BindingIdentifier[?Yield, ?Await] (		&ensp;&ensp; function BindingIdentifier[?Yield, ?Await] (
									
&ensp;&ensp; [+Default] function ( FormalParameters[~Yiel		&ensp;&ensp; [+Default] function ( FormalParameters[~Yiel
<br><br>								<br><br>
**FunctionExpression :**						**FunctionExpression :**
									
&ensp;&ensp; function BindingIdentifier[~Yield, ~Await]op		&ensp;&ensp; function BindingIdentifier[~Yield, ~Await]op
<br><br>								<br><br>
**FunctionBody[Yield, Await] :**					**FunctionBody[Yield, Await] :**
									
&ensp;&ensp; FunctionStatementList[?Yield, ?Await]			&ensp;&ensp; FunctionStatementList[?Yield, ?Await]
<br><br>								<br><br>
**FunctionStatementList[Yield, Await] :**				**FunctionStatementList[Yield, Await] :**
									
&ensp;&ensp; StatementList[?Yield, ?Await, +Return]opt			&ensp;&ensp; StatementList[?Yield, ?Await, +Return]opt
<br><br>								<br><br>
**ArrowFunction[In, Yield, Await] :**					**ArrowFunction[In, Yield, Await] :**
									
&ensp;&ensp; ArrowParameters[?Yield, ?Await] [no LineTerm		&ensp;&ensp; ArrowParameters[?Yield, ?Await] [no LineTerm
<br><br>								<br><br>
**ArrowParameters[Yield, Await] :**					**ArrowParameters[Yield, Await] :**
									
&ensp;&ensp; BindingIdentifier[?Yield, ?Await]				&ensp;&ensp; BindingIdentifier[?Yield, ?Await]
									
&ensp;&ensp; CoverParenthesizedExpressionAndArrowParamete		&ensp;&ensp; CoverParenthesizedExpressionAndArrowParamete
<br><br>								<br><br>
**ConciseBody[In] :**							**ConciseBody[In] :**
									
&ensp;&ensp; [lookahead ≠ {] ExpressionBody[?In, ~Await		&ensp;&ensp; [lookahead ≠ {] ExpressionBody[?In, ~Await
									
&ensp;&ensp; { FunctionBody[~Yield, ~Await] }				&ensp;&ensp; { FunctionBody[~Yield, ~Await] }
<br><br>								<br><br>
**ExpressionBody[In, Await] :**						**ExpressionBody[In, Await] :**
									
&ensp;&ensp; AssignmentExpression[?In, ~Yield, ?Await]			&ensp;&ensp; AssignmentExpression[?In, ~Yield, ?Await]
									
									
									
When processing an instance of the production				When processing an instance of the production
									
ArrowParameters[Yield, Await] : CoverParenthesizedExpress		ArrowParameters[Yield, Await] : CoverParenthesizedExpress
									
the interpretation of CoverParenthesizedExpressionAndArro		the interpretation of CoverParenthesizedExpressionAndArro
<br><br>								<br><br>
**ArrowFormalParameters[Yield, Await] :**				**ArrowFormalParameters[Yield, Await] :**
									
&ensp;&ensp; ( UniqueFormalParameters[?Yield, ?Await] )			&ensp;&ensp; ( UniqueFormalParameters[?Yield, ?Await] )
<br><br>								<br><br>
**AsyncArrowFunction[In, Yield, Await] :**				**AsyncArrowFunction[In, Yield, Await] :**
									
&ensp;&ensp; async [no LineTerminator here] AsyncArrowBin		&ensp;&ensp; async [no LineTerminator here] AsyncArrowBin
									
&ensp;&ensp; CoverCallExpressionAndAsyncArrowHead[?Yield,		&ensp;&ensp; CoverCallExpressionAndAsyncArrowHead[?Yield,
<br><br>								<br><br>
**AsyncConciseBody[In] :**						**AsyncConciseBody[In] :**
									
&ensp;&ensp; [lookahead ≠ {] ExpressionBody[?In, +Await		&ensp;&ensp; [lookahead ≠ {] ExpressionBody[?In, +Await
									
&ensp;&ensp; { AsyncFunctionBody }					&ensp;&ensp; { AsyncFunctionBody }
<br><br>								<br><br>
**AsyncArrowBindingIdentifier[Yield] :**				**AsyncArrowBindingIdentifier[Yield] :**
									
&ensp;&ensp; BindingIdentifier[?Yield, +Await]				&ensp;&ensp; BindingIdentifier[?Yield, +Await]
<br><br>								<br><br>
**CoverCallExpressionAndAsyncArrowHead[Yield, Await] :**		**CoverCallExpressionAndAsyncArrowHead[Yield, Await] :**
									
&ensp;&ensp; MemberExpression[?Yield, ?Await] Arguments[?		&ensp;&ensp; MemberExpression[?Yield, ?Await] Arguments[?
									
									
									
When processing an instance of the production				When processing an instance of the production
									
AsyncArrowFunction[In, Yield, Await] : CoverCallExpressio		AsyncArrowFunction[In, Yield, Await] : CoverCallExpressio
									
the interpretation of CoverCallExpressionAndAsyncArrowHea		the interpretation of CoverCallExpressionAndAsyncArrowHea
<br><br>								<br><br>
**AsyncArrowHead :**							**AsyncArrowHead :**
									
&ensp;&ensp; async [no LineTerminator here] ArrowFormalPa		&ensp;&ensp; async [no LineTerminator here] ArrowFormalPa
<br><br>								<br><br>
**MethodDefinition[Yield, Await] :**					**MethodDefinition[Yield, Await] :**
									
&ensp;&ensp; ClassElementName[?Yield, ?Await] ( UniqueFor		&ensp;&ensp; ClassElementName[?Yield, ?Await] ( UniqueFor
									
&ensp;&ensp; GeneratorMethod[?Yield, ?Await]				&ensp;&ensp; GeneratorMethod[?Yield, ?Await]
									
&ensp;&ensp; AsyncMethod[?Yield, ?Await]				&ensp;&ensp; AsyncMethod[?Yield, ?Await]
									
&ensp;&ensp; AsyncGeneratorMethod[?Yield, ?Await]			&ensp;&ensp; AsyncGeneratorMethod[?Yield, ?Await]
									
&ensp;&ensp; get ClassElementName[?Yield, ?Await] ( ) { F		&ensp;&ensp; get ClassElementName[?Yield, ?Await] ( ) { F
									
&ensp;&ensp; set ClassElementName[?Yield, ?Await] ( Prope		&ensp;&ensp; set ClassElementName[?Yield, ?Await] ( Prope
<br><br>								<br><br>
**PropertySetParameterList :**						**PropertySetParameterList :**
									
&ensp;&ensp; FormalParameter[~Yield, ~Await]				&ensp;&ensp; FormalParameter[~Yield, ~Await]
<br><br>								<br><br>
**GeneratorDeclaration[Yield, Await, Default] :**			**GeneratorDeclaration[Yield, Await, Default] :**
									
&ensp;&ensp; function * BindingIdentifier[?Yield, ?Await]		&ensp;&ensp; function * BindingIdentifier[?Yield, ?Await]
									
[+Default] function * ( FormalParameters[+Yield, ~Await] 		[+Default] function * ( FormalParameters[+Yield, ~Await] 
									
&ensp;&ensp; **GeneratorExpression :**					&ensp;&ensp; **GeneratorExpression :**
									
&ensp;&ensp; function * BindingIdentifier[+Yield, ~Await]		&ensp;&ensp; function * BindingIdentifier[+Yield, ~Await]
<br><br>								<br><br>
**GeneratorMethod[Yield, Await] :**					**GeneratorMethod[Yield, Await] :**
									
&ensp;&ensp; * ClassElementName[?Yield, ?Await] ( UniqueF		&ensp;&ensp; * ClassElementName[?Yield, ?Await] ( UniqueF
<br><br>								<br><br>
**GeneratorBody :**							**GeneratorBody :**
									
&ensp;&ensp; FunctionBody[+Yield, ~Await]				&ensp;&ensp; FunctionBody[+Yield, ~Await]
<br><br>								<br><br>
**YieldExpression[In, Await] :**					**YieldExpression[In, Await] :**
									
&ensp;&ensp; yield							&ensp;&ensp; yield
									
&ensp;&ensp; yield [no LineTerminator here] AssignmentExp		&ensp;&ensp; yield [no LineTerminator here] AssignmentExp
									
&ensp;&ensp; yield [no LineTerminator here] * AssignmentE		&ensp;&ensp; yield [no LineTerminator here] * AssignmentE
									
&ensp;&ensp; **AsyncGeneratorDeclaration[Yield, Await, De		&ensp;&ensp; **AsyncGeneratorDeclaration[Yield, Await, De
									
&ensp;&ensp; async [no LineTerminator here] function * Bi		&ensp;&ensp; async [no LineTerminator here] function * Bi
									
&ensp;&ensp; [+Default] async [no LineTerminator here] fu		&ensp;&ensp; [+Default] async [no LineTerminator here] fu
<br><br>								<br><br>
**AsyncGeneratorExpression :**						**AsyncGeneratorExpression :**
									
&ensp;&ensp; async [no LineTerminator here] function * Bi		&ensp;&ensp; async [no LineTerminator here] function * Bi
<br><br>								<br><br>
**AsyncGeneratorMethod[Yield, Await] :**				**AsyncGeneratorMethod[Yield, Await] :**
									
&ensp;&ensp; async [no LineTerminator here] * ClassElemen		&ensp;&ensp; async [no LineTerminator here] * ClassElemen
<br><br>								<br><br>
**AsyncGeneratorBody :**						**AsyncGeneratorBody :**
									
&ensp;&ensp; FunctionBody[+Yield, +Await]				&ensp;&ensp; FunctionBody[+Yield, +Await]
<br><br>								<br><br>
**AsyncFunctionDeclaration[Yield, Await, Default] :**			**AsyncFunctionDeclaration[Yield, Await, Default] :**
									
&ensp;&ensp; async [no LineTerminator here] function Bind		&ensp;&ensp; async [no LineTerminator here] function Bind
									
&ensp;&ensp; [+Default] async [no LineTerminator here] fu		&ensp;&ensp; [+Default] async [no LineTerminator here] fu
<br><br>								<br><br>
**AsyncFunctionExpression :**						**AsyncFunctionExpression :**
									
&ensp;&ensp; async [no LineTerminator here] function Bind		&ensp;&ensp; async [no LineTerminator here] function Bind
<br><br>								<br><br>
**AsyncMethod[Yield, Await] :**						**AsyncMethod[Yield, Await] :**
									
&ensp;&ensp; async [no LineTerminator here] ClassElementN		&ensp;&ensp; async [no LineTerminator here] ClassElementN
<br><br>								<br><br>
**AsyncFunctionBody :**							**AsyncFunctionBody :**
									
&ensp;&ensp; FunctionBody[~Yield, +Await]				&ensp;&ensp; FunctionBody[~Yield, +Await]
<br><br>								<br><br>
**AwaitExpression[Yield] :**						**AwaitExpression[Yield] :**
									
&ensp;&ensp; await UnaryExpression[?Yield, +Await]			&ensp;&ensp; await UnaryExpression[?Yield, +Await]
<br><br>								<br><br>
**ClassDeclaration[Yield, Await, Default] :**				**ClassDeclaration[Yield, Await, Default] :**
									
&ensp;&ensp; class BindingIdentifier[?Yield, ?Await] Clas		&ensp;&ensp; class BindingIdentifier[?Yield, ?Await] Clas
									
&ensp;&ensp; [+Default] class ClassTail[?Yield, ?Await]			&ensp;&ensp; [+Default] class ClassTail[?Yield, ?Await]
<br><br>								<br><br>
**ClassExpression[Yield, Await] :**					**ClassExpression[Yield, Await] :**
									
&ensp;&ensp; class BindingIdentifier[?Yield, ?Await]opt C		&ensp;&ensp; class BindingIdentifier[?Yield, ?Await]opt C
<br><br>								<br><br>
**ClassTail[Yield, Await] :**						**ClassTail[Yield, Await] :**
									
&ensp;&ensp; ClassHeritage[?Yield, ?Await]opt { ClassBody		&ensp;&ensp; ClassHeritage[?Yield, ?Await]opt { ClassBody
<br><br>								<br><br>
**ClassHeritage[Yield, Await] :**					**ClassHeritage[Yield, Await] :**
									
&ensp;&ensp; extends LeftHandSideExpression[?Yield, ?Awai		&ensp;&ensp; extends LeftHandSideExpression[?Yield, ?Awai
<br><br>								<br><br>
**ClassBody[Yield, Await] :**						**ClassBody[Yield, Await] :**
									
&ensp;&ensp; ClassElementList[?Yield, ?Await]				&ensp;&ensp; ClassElementList[?Yield, ?Await]
<br><br>								<br><br>
**ClassElementList[Yield, Await] :**					**ClassElementList[Yield, Await] :**
									
&ensp;&ensp; ClassElement[?Yield, ?Await]				&ensp;&ensp; ClassElement[?Yield, ?Await]
									
&ensp;&ensp; ClassElementList[?Yield, ?Await] ClassElemen		&ensp;&ensp; ClassElementList[?Yield, ?Await] ClassElemen
<br><br>								<br><br>
**ClassElement[Yield, Await] :**					**ClassElement[Yield, Await] :**
									
&ensp;&ensp; MethodDefinition[?Yield, ?Await]				&ensp;&ensp; MethodDefinition[?Yield, ?Await]
									
&ensp;&ensp; static MethodDefinition[?Yield, ?Await]			&ensp;&ensp; static MethodDefinition[?Yield, ?Await]
									
&ensp;&ensp; FieldDefinition[?Yield, ?Await] ;				&ensp;&ensp; FieldDefinition[?Yield, ?Await] ;
									
&ensp;&ensp; static FieldDefinition[?Yield, ?Await] ;			&ensp;&ensp; static FieldDefinition[?Yield, ?Await] ;
									
&ensp;&ensp; ClassStaticBlock						&ensp;&ensp; ClassStaticBlock
									
&ensp;&ensp; ;								&ensp;&ensp; ;
<br><br>								<br><br>
**FieldDefinition[Yield, Await] :**					**FieldDefinition[Yield, Await] :**
									
&ensp;&ensp; ClassElementName[?Yield, ?Await] Initializer		&ensp;&ensp; ClassElementName[?Yield, ?Await] Initializer
<br><br>								<br><br>
**ClassElementName[Yield, Await] :**					**ClassElementName[Yield, Await] :**
									
&ensp;&ensp; PropertyName[?Yield, ?Await]				&ensp;&ensp; PropertyName[?Yield, ?Await]
									
&ensp;&ensp; PrivateIdentifier						&ensp;&ensp; PrivateIdentifier
<br><br>								<br><br>
**ClassStaticBlock :**							**ClassStaticBlock :**
									
&ensp;&ensp; static { ClassStaticBlockBody }				&ensp;&ensp; static { ClassStaticBlockBody }
<br><br>								<br><br>
**ClassStaticBlockBody :**						**ClassStaticBlockBody :**
									
&ensp;&ensp; ClassStaticBlockStatementList				&ensp;&ensp; ClassStaticBlockStatementList
<br><br>								<br><br>
**ClassStaticBlockStatementList :**					**ClassStaticBlockStatementList :**
									
&ensp;&ensp; StatementList[~Yield, +Await, ~Return]opt
\ No newline at end of file
			&ensp;&ensp; StatementList[~Yield, +Await, ~Return]opt
\ No newline at end of file

